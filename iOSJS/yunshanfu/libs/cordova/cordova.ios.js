!function () { var o, v, r, a, i, p = "3.9.2"; r = {}, a = [], i = {}, o = function (e) { if (!r[e]) throw "module " + e + " not found"; var t, n; if (e in i) throw "Cycle in require graph: " + a.slice(i[e]).join("->") + "->" + e; if (r[e].factory) try { return i[e] = a.length, a.push(e), t = r[e], n = t.factory, t.exports = {}, delete t.factory, n(function (e) { var n = e; return "." === e.charAt(0) && (n = t.id.slice(0, t.id.lastIndexOf(".")) + "." + e.slice(2)), o(n) }, t.exports, t), t.exports } finally { delete i[e], a.pop() } return r[e].exports }, (v = function (e, n) { if (r[e]) throw "module " + e + " already defined"; r[e] = { id: e, factory: n } }).remove = function (e) { delete r[e] }, v.moduleMap = r, "object" == typeof module && "function" == typeof o && (module.exports.require = o, module.exports.define = v), v("cordova", function (e, n, t) { if (window.cordova && !(window.cordova instanceof HTMLElement)) throw new Error("cordova already defined"); var o = e("cordova/channel"), r = e("cordova/platform"), a = document.addEventListener, i = document.removeEventListener, c = window.addEventListener, d = window.removeEventListener, s = {}, u = {}; function l(e, n) { var t = document.createEvent("Events"); if (t.initEvent(e, !1, !1), n) for (var o in n) n.hasOwnProperty(o) && (t[o] = n[o]); return t } document.addEventListener = function (e, n, t) { var o = e.toLowerCase(); void 0 !== s[o] ? s[o].subscribe(n) : a.call(document, e, n, t) }, window.addEventListener = function (e, n, t) { var o = e.toLowerCase(); void 0 !== u[o] ? u[o].subscribe(n) : c.call(window, e, n, t) }, document.removeEventListener = function (e, n, t) { var o = e.toLowerCase(); void 0 !== s[o] ? s[o].unsubscribe(n) : i.call(document, e, n, t) }, window.removeEventListener = function (e, n, t) { var o = e.toLowerCase(); void 0 !== u[o] ? u[o].unsubscribe(n) : d.call(window, e, n, t) }; var f = { define: v, require: e, version: p, platformVersion: p, platformId: r.id, addWindowEventHandler: function (e) { return u[e] = o.create(e) }, addStickyDocumentEventHandler: function (e) { return s[e] = o.createSticky(e) }, addDocumentEventHandler: function (e) { return s[e] = o.create(e) }, removeWindowEventHandler: function (e) { delete u[e] }, removeDocumentEventHandler: function (e) { delete s[e] }, getOriginalHandlers: function () { return { document: { addEventListener: a, removeEventListener: i }, window: { addEventListener: c, removeEventListener: d } } }, fireDocumentEvent: function (e, n, t) { var o = l(e, n); void 0 !== s[e] ? t ? s[e].fire(o) : setTimeout(function () { "deviceready" == e && document.dispatchEvent(o), s[e].fire(o) }, 0) : document.dispatchEvent(o) }, fireWindowEvent: function (e, n) { var t = l(e, n); void 0 !== u[e] ? setTimeout(function () { u[e].fire(t) }, 0) : window.dispatchEvent(t) }, callbackId: Math.floor(2e9 * Math.random()), callbacks: {}, callbackStatus: { NO_RESULT: 0, OK: 1, CLASS_NOT_FOUND_EXCEPTION: 2, ILLEGAL_ACCESS_EXCEPTION: 3, INSTANTIATION_EXCEPTION: 4, MALFORMED_URL_EXCEPTION: 5, IO_EXCEPTION: 6, INVALID_ACTION: 7, JSON_EXCEPTION: 8, ERROR: 9 }, callbackSuccess: function (e, n) { f.callbackFromNative(e, !0, n.status, [n.message], n.keepCallback) }, callbackError: function (e, n) { f.callbackFromNative(e, !1, n.status, [n.message], n.keepCallback) }, callbackFromNative: function (n, t, e, o, r) { try { var a = f.callbacks[n]; a && (t && e == f.callbackStatus.OK ? a.success && a.success.apply(null, o) : t || a.fail && a.fail.apply(null, o), r || delete f.callbacks[n]) } catch (e) { var i = "Error in " + (t ? "Success" : "Error") + " callbackId: " + n + " : " + e; throw console && console.log && console.log(i), f.fireWindowEvent("cordovacallbackerror", { message: i }), e } }, addConstructor: function (e) { o.onCordovaReady.subscribe(function () { try { e() } catch (e) { console.log("Failed to run constructor: " + e) } }) } }; t.exports = f }), v("cordova/argscheck", function (e, n, t) { var f = e("cordova/utils"), v = t.exports, p = { A: "Array", D: "Date", N: "Number", S: "String", F: "Function", O: "Object" }; v.checkArgs = function (e, n, t, o) { if (v.enableChecks) { for (var r, a, i, c = null, d = 0; d < e.length; ++d) { var s = e.charAt(d), u = s.toUpperCase(), l = t[d]; if ("*" != s && (r = f.typeName(l), (null != l || s != u) && r != p[u])) { c = "Expected " + p[u]; break } } if (c) throw c += ", but got " + r + ".", c = 'Wrong type for parameter "' + (a = o || t.callee, i = d, /.*?\((.*?)\)/.exec(a)[1].split(", ")[i]) + '" of ' + n + ": " + c, "undefined" == typeof jasmine && console.error(c), TypeError(c) } }, v.getValue = function (e, n) { return void 0 === e ? n : e }, v.enableChecks = !0 }), v("cordova/base64", function (e, n, t) { var o = n; o.fromArrayBuffer = function (e) { return function (e) { for (var n, t = e.byteLength, o = "", r = c(), a = 0; a < t - 2; a += 3)n = (e[a] << 16) + (e[a + 1] << 8) + e[a + 2], o += r[n >> 12], o += r[4095 & n]; t - a == 2 ? (n = (e[a] << 16) + (e[a + 1] << 8), o += r[n >> 12], o += i[(4095 & n) >> 6], o += "=") : t - a == 1 && (n = e[a] << 16, o += r[n >> 12], o += "=="); return o }(new Uint8Array(e)) }, o.toArrayBuffer = function (e) { for (var n = "undefined" != typeof atob ? atob(e) : new Buffer(e, "base64").toString("binary"), t = new ArrayBuffer(n.length), o = new Uint8Array(t), r = 0, a = n.length; r < a; r++)o[r] = n.charCodeAt(r); return t }; var r, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", c = function () { r = []; for (var e = 0; e < 64; e++)for (var n = 0; n < 64; n++)r[64 * e + n] = i[e] + i[n]; return c = function () { return r }, r } }), v("cordova/builder", function (i, r, e) { var c = i("cordova/utils"); function a(e, n, t) { r.replaceHookForTesting(e, n); var o = !1; try { e[n] = t } catch (e) { o = !0 } (o || e[n] !== t) && c.defineGetter(e, n, function () { return t }) } function d(e, n, t, o) { o ? c.defineGetter(e, n, function () { return console.log(o), delete e[n], a(e, n, t), t }) : a(e, n, t) } function s(o, e, r, a) { !function (e, n, t) { for (var o in e) e.hasOwnProperty(o) && n.apply(t, [e[o], o]) }(e, function (e, n) { try { var t = e.path ? i(e.path) : {}; r ? (void 0 === o[n] ? d(o, n, t, e.deprecated) : void 0 !== e.path && (a ? u(o[n], t) : d(o, n, t, e.deprecated)), t = o[n]) : void 0 === o[n] ? d(o, n, t, e.deprecated) : t = o[n], e.children && s(t, e.children, r, a) } catch (e) { c.alert("Exception building Cordova JS globals: " + e + ' for key "' + n + '"') } }) } function u(e, n) { for (var t in n) n.hasOwnProperty(t) && (e.prototype && e.prototype.constructor === e ? a(e.prototype, t, n[t]) : "object" == typeof n[t] && "object" == typeof e[t] ? u(e[t], n[t]) : a(e, t, n[t])) } r.buildIntoButDoNotClobber = function (e, n) { s(n, e, !1, !1) }, r.buildIntoAndClobber = function (e, n) { s(n, e, !0, !1) }, r.buildIntoAndMerge = function (e, n) { s(n, e, !0, !0) }, r.recursiveMerge = u, r.assignOrWrapInDeprecateGetter = d, r.replaceHookForTesting = function () { } }), v("cordova/channel", function (e, n, t) { var r = e("cordova/utils"), a = 1, o = function (e, n) { this.type = e, this.handlers = {}, this.state = n ? 1 : 0, this.fireArgs = null, this.numHandlers = 0, this.onHasSubscribersChange = null }, i = { join: function (e, n) { for (var t = n.length, o = t, r = function () { --o || e() }, a = 0; a < t; a++) { if (0 === n[a].state) throw Error("Can only use join with sticky channels."); n[a].subscribe(r) } t || e() }, create: function (e) { return i[e] = new o(e, !1) }, createSticky: function (e) { return i[e] = new o(e, !0) }, deviceReadyChannelsArray: [], deviceReadyChannelsMap: {}, waitForInitialization: function (e) { if (e) { var n = i[e] || this.createSticky(e); this.deviceReadyChannelsMap[e] = n, this.deviceReadyChannelsArray.push(n) } }, initializationComplete: function (e) { var n = this.deviceReadyChannelsMap[e]; n && n.fire() } }; function c(e) { if ("function" != typeof e) throw "Function required as first argument!" } o.prototype.subscribe = function (e, n) { if (c(e), 2 != this.state) { var t = e, o = e.observer_guid; "object" == typeof n && (t = r.close(n, e)), o || (o = "" + a++), t.observer_guid = o, e.observer_guid = o, this.handlers[o] || (this.handlers[o] = t, this.numHandlers++, 1 == this.numHandlers && this.onHasSubscribersChange && this.onHasSubscribersChange()) } else e.apply(n || this, this.fireArgs) }, o.prototype.unsubscribe = function (e) { c(e); var n = e.observer_guid; this.handlers[n] && (delete this.handlers[n], this.numHandlers--, 0 === this.numHandlers && this.onHasSubscribersChange && this.onHasSubscribersChange()) }, o.prototype.fire = function (e) { var n = Array.prototype.slice.call(arguments); if (1 == this.state && (this.state = 2, this.fireArgs = n), this.numHandlers) { var t = []; for (var o in this.handlers) t.push(this.handlers[o]); for (var r = 0; r < t.length; ++r)t[r].apply(this, n); 2 == this.state && this.numHandlers && (this.numHandlers = 0, this.handlers = {}, this.onHasSubscribersChange && this.onHasSubscribersChange()) } }, i.createSticky("onDOMContentLoaded"), i.createSticky("onNativeReady"), i.createSticky("onCordovaReady"), i.createSticky("onPluginsReady"), i.createSticky("onDeviceReady"), i.create("onResume"), i.create("onPause"), i.waitForInitialization("onCordovaReady"), i.waitForInitialization("onDOMContentLoaded"), t.exports = i }), v("cordova/exec", function (e, n, t) { var d, o, r, a, s = e("cordova"), u = (e("cordova/channel"), e("cordova/utils")), l = e("cordova/base64"), f = { IFRAME_NAV: 0, XHR_NO_PAYLOAD: 1, XHR_WITH_PAYLOAD: 2, XHR_OPTIONAL_PAYLOAD: 3, IFRAME_HASH_NO_PAYLOAD: 4, IFRAME_HASH_WITH_PAYLOAD: 5, WK_WEBVIEW_BINDING: 6 }, i = 1, c = 0, v = null, p = [], h = 0, y = 0; function m(e) { if ("ArrayBuffer" == e.CDVType) { n = e.data, e = function (e) { for (var n = new Uint8Array(e.length), t = 0; t < e.length; t++)n[t] = e.charCodeAt(t); return n.buffer }(atob(n)) } var n; return e } function g() { var e, n, t, o, r, a; void 0 === d && (d = f.IFRAME_NAV), window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.cordova && window.webkit.messageHandlers.cordova.postMessage && (d = f.WK_WEBVIEW_BINDING); var i = null; if ("string" != typeof arguments[0]) e = arguments[0], n = arguments[1], t = arguments[2], o = arguments[3], r = arguments[4], i = "INVALID"; else try { return o = (a = arguments[0].split(".")).pop(), t = a.join("."), r = Array.prototype.splice.call(arguments, 1), void console.log('The old format of this exec call has been removed (deprecated since 2.1). Change to: cordova.exec(null, null, "' + t + '", "' + o + '",' + JSON.stringify(r) + ");") } catch (e) { } r = r || [], (e || n) && (i = t + s.callbackId++, s.callbacks[i] = { success: e, fail: n }); var c = [i, t, o, r = function (e) { if (!e || "Array" != u.typeName(e)) return e; var t = []; return e.forEach(function (e, n) { "ArrayBuffer" == u.typeName(e) ? t.push({ CDVType: "ArrayBuffer", data: l.fromArrayBuffer(e) }) : t.push(e) }), t }(r)]; p.push(JSON.stringify(c)), d === f.WK_WEBVIEW_BINDING ? window.webkit.messageHandlers.cordova.postMessage(c) : h || 1 != p.length || b() } function b() { switch (d) { case f.XHR_NO_PAYLOAD: case f.XHR_WITH_PAYLOAD: case f.XHR_OPTIONAL_PAYLOAD: !function () { a && 4 != a.readyState && (a = null); (a = a || new XMLHttpRequest).open("HEAD", "/!gap_exec?" + +new Date, !0), v || (v = /.*\((.*)\)$/.exec(navigator.userAgent)[1]); a.setRequestHeader("vc", v), a.setRequestHeader("rc", ++c), function () { if (d === f.XHR_WITH_PAYLOAD) return !0; if (d !== f.XHR_OPTIONAL_PAYLOAD) return !1; for (var e = 0, n = 0; n < p.length; ++n)e += p[n].length; return e < 4500 }() && a.setRequestHeader("cmds", g.nativeFetchMessages()); a.send(null) }(); break; default: w() } } function w() { if (document.body) if (d === f.IFRAME_HASH_NO_PAYLOAD || d === f.IFRAME_HASH_WITH_PAYLOAD) { r || ((r = document.createElement("iframe")).style.display = "none", document.body.appendChild(r), r.contentWindow.history.replaceState(null, null, "file:///#")); var e = "%0" + (i ^= 3); d === f.IFRAME_HASH_WITH_PAYLOAD && (e += g.nativeFetchMessages()), r.contentWindow.location.hash = e } else o && o.contentWindow ? o.contentWindow.location = "gap://ready" : ((o = document.createElement("iframe")).style.display = "none", o.src = "gap://ready", document.body.appendChild(o)), y = setTimeout(function () { p.length && b() }, 50); else setTimeout(w) } g.jsToNativeModes = f, g.setJsToNativeBridgeMode = function (e) { o && (o.parentNode && o.parentNode.removeChild(o), o = null), d = e }, g.nativeFetchMessages = function () { if (y && (clearTimeout(y), y = 0), !p.length) return ""; var e = "[" + p.join(",") + "]"; return p.length = 0, e }, g.nativeCallback = function (r, a, i, c) { return g.nativeEvalAndFetch(function () { var e, n, t = 0 === a || 1 === a, o = (n = [], (e = i) && e.hasOwnProperty("CDVType") ? "MultiPart" == e.CDVType ? e.messages.forEach(function (e) { n.push(m(e)) }) : n.push(m(e)) : n.push(e), n); s.callbackFromNative(r, t, a, o, c) }) }, g.nativeEvalAndFetch = function (e) { h++; try { return e(), g.nativeFetchMessages() } finally { h-- } }, t.exports = g }), v("cordova/exec/proxy", function (e, n, t) { var o = {}; t.exports = { add: function (e, n) { return console.log("adding proxy for " + e), o[e] = n }, remove: function (e) { var n = o[e]; return delete o[e], o[e] = null, n }, get: function (e, n) { return o[e] ? o[e][n] : null } } }), v("cordova/init", function (e, n, t) { var o = e("cordova/channel"), r = e("cordova"), a = e("cordova/modulemapper"), i = e("cordova/platform"), c = e("cordova/pluginloader"), d = e("cordova/utils"), s = [o.onNativeReady, o.onPluginsReady]; function u(e) { for (var n = 0; n < e.length; ++n)2 != e[n].state && console.log("Channel not fired: " + e[n].type) } window.setTimeout(function () { 2 != o.onDeviceReady.state && (console.log("deviceready has not fired after 5 seconds."), u(s), u(o.deviceReadyChannelsArray)) }, 5e3), window.navigator && (window.navigator = function (n) { var e = function () { }; e.prototype = n; var t = new e; if (e.bind) for (var o in n) "function" == typeof n[o] ? t[o] = n[o].bind(n) : function (e) { d.defineGetterSetter(t, o, function () { return n[e] }) }(o); return t }(window.navigator)), window.console || (window.console = { log: function () { } }), window.console.warn || (window.console.warn = function (e) { this.log("warn: " + e) }), o.onPause = r.addDocumentEventHandler("pause"), o.onResume = r.addDocumentEventHandler("resume"), o.onActivated = r.addDocumentEventHandler("activated"), o.onDeviceReady = r.addStickyDocumentEventHandler("deviceready"), "complete" == document.readyState || "interactive" == document.readyState ? o.onDOMContentLoaded.fire() : document.addEventListener("DOMContentLoaded", function () { o.onDOMContentLoaded.fire() }, !1), window._nativeReady && o.onNativeReady.fire(), a.clobbers("cordova", "cordova"), a.clobbers("cordova/exec", "cordova.exec"), a.clobbers("cordova/exec", "Cordova.exec"), i.bootstrap && i.bootstrap(), setTimeout(function () { c.load(function () { o.onPluginsReady.fire() }) }, 0), o.join(function () { a.mapModules(window), i.initialize && i.initialize(), o.onCordovaReady.fire(), o.join(function () { e("cordova").fireDocumentEvent("deviceready") }, o.deviceReadyChannelsArray) }, s) }), v("cordova/init_b", function (e, n, t) { var o = e("cordova/channel"), r = e("cordova"), a = e("cordova/modulemapper"), i = e("cordova/platform"), c = e("cordova/pluginloader"), d = e("cordova/utils"), s = [o.onDOMContentLoaded, o.onNativeReady, o.onPluginsReady]; function u(e) { for (var n = 0; n < e.length; ++n)2 != e[n].state && console.log("Channel not fired: " + e[n].type) } r.exec = e("cordova/exec"), window.setTimeout(function () { 2 != o.onDeviceReady.state && (console.log("deviceready has not fired after 5 seconds."), u(s), u(o.deviceReadyChannelsArray)) }, 5e3), window.navigator && (window.navigator = function (n) { var e = function () { }; e.prototype = n; var t = new e; if (e.bind) for (var o in n) "function" == typeof n[o] ? t[o] = n[o].bind(n) : function (e) { d.defineGetterSetter(t, o, function () { return n[e] }) }(o); return t }(window.navigator)), window.console || (window.console = { log: function () { } }), window.console.warn || (window.console.warn = function (e) { this.log("warn: " + e) }), o.onPause = r.addDocumentEventHandler("pause"), o.onResume = r.addDocumentEventHandler("resume"), o.onActivated = r.addDocumentEventHandler("activated"), o.onDeviceReady = r.addStickyDocumentEventHandler("deviceready"), "complete" == document.readyState || "interactive" == document.readyState ? o.onDOMContentLoaded.fire() : document.addEventListener("DOMContentLoaded", function () { o.onDOMContentLoaded.fire() }, !1), window._nativeReady && o.onNativeReady.fire(), i.bootstrap && i.bootstrap(), setTimeout(function () { c.load(function () { o.onPluginsReady.fire() }) }, 0), o.join(function () { a.mapModules(window), i.initialize && i.initialize(), o.onCordovaReady.fire(), o.join(function () { e("cordova").fireDocumentEvent("deviceready") }, o.deviceReadyChannelsArray) }, s) }), v("cordova/modulemapper", function (p, e, n) { var h, y, m = p("cordova/builder"), r = v.moduleMap; function o(e, n, t, o) { if (!(n in r)) throw new Error("Module " + n + " does not exist."); h.push(e, n, t), o && (y[t] = o) } function g(e, n) { if (!e) return n; for (var t, o = e.split("."), r = n, a = 0; t = o[a]; ++a)r = r[t] = r[t] || {}; return r } e.reset = function () { h = [], y = {} }, e.clobbers = function (e, n, t) { o("c", e, n, t) }, e.merges = function (e, n, t) { o("m", e, n, t) }, e.defaults = function (e, n, t) { o("d", e, n, t) }, e.runs = function (e) { o("r", e, null) }, e.mapModules = function (e) { var n = {}; e.CDV_origSymbols = n; for (var t = 0, o = h.length; t < o; t += 3) { var r = h[t], a = h[t + 1], i = p(a); if ("r" != r) { var c = h[t + 2], d = c.lastIndexOf("."), s = c.substr(0, d), u = c.substr(d + 1), l = c in y ? "Access made to deprecated symbol: " + c + ". " + l : null, f = g(s, e), v = f[u]; "m" == r && v ? m.recursiveMerge(v, i) : ("d" == r && !v || "d" != r) && (c in n || (n[c] = v), m.assignOrWrapInDeprecateGetter(f, u, i, l)) } } }, e.getOriginalSymbol = function (e, n) { var t = e.CDV_origSymbols; if (t && n in t) return t[n]; for (var o = n.split("."), r = e, a = 0; a < o.length; ++a)r = r && r[o[a]]; return r }, e.reset() }), v("cordova/modulemapper_b", function (p, e, n) { var h, y = p("cordova/builder"), m = []; function o(e, n, t, o) { m.push(e, n, t), o && (h[t] = o) } function g(e, n) { if (!e) return n; for (var t, o = e.split("."), r = n, a = 0; t = o[a]; ++a)r = r[t] = r[t] || {}; return r } e.reset = function () { m = [], h = {} }, e.clobbers = function (e, n, t) { o("c", e, n, t) }, e.merges = function (e, n, t) { o("m", e, n, t) }, e.defaults = function (e, n, t) { o("d", e, n, t) }, e.runs = function (e) { o("r", e, null) }, e.mapModules = function (e) { var n = {}; e.CDV_origSymbols = n; for (var t = 0, o = m.length; t < o; t += 3) { var r = m[t], a = m[t + 1], i = p(a); if ("r" != r) { var c = m[t + 2], d = c.lastIndexOf("."), s = c.substr(0, d), u = c.substr(d + 1), l = c in h ? "Access made to deprecated symbol: " + c + ". " + l : null, f = g(s, e), v = f[u]; "m" == r && v ? y.recursiveMerge(v, i) : ("d" == r && !v || "d" != r) && (c in n || (n[c] = v), y.assignOrWrapInDeprecateGetter(f, u, i, l)) } } }, e.getOriginalSymbol = function (e, n) { var t = e.CDV_origSymbols; if (t && n in t) return t[n]; for (var o = n.split("."), r = e, a = 0; a < o.length; ++a)r = r && r[o[a]]; return r }, e.reset() }), v("cordova/platform", function (e, n, t) { t.exports = { id: "ios", bootstrap: function () { e("cordova/channel").onNativeReady.fire() } } }), v("cordova/pluginloader", function (o, r, e) { var i = o("cordova/modulemapper"); o("cordova/urlutil"); function c(e, n, t, o) { o = o || t, e in v.moduleMap ? t() : r.injectScript(n, function () { e in v.moduleMap ? t() : o() }, o) } function a(e, n, t) { var o = n.length; if (o) for (var r = 0; r < n.length; r++)c(n[r].id, e + n[r].file, a); else t(); function a() { --o || function (e, n) { for (var t, o = 0; t = e[o]; o++) { if (t.clobbers && t.clobbers.length) for (var r = 0; r < t.clobbers.length; r++)i.clobbers(t.id, t.clobbers[r]); if (t.merges && t.merges.length) for (var a = 0; a < t.merges.length; a++)i.merges(t.id, t.merges[a]); t.runs && i.runs(t.id) } n() }(n, t) } } r.injectScript = function (e, n, t) { var o = document.createElement("script"); o.onload = n, o.onerror = t, o.src = e, document.head.appendChild(o) }, r.load = function (n) { var t = function () { for (var e = null, n = document.getElementsByTagName("script"), t = n.length - 1; -1 < t; t--) { var o = n[t].src.replace(/\?.*$/, ""); if (o.match(/\/cordova\.((ios)|(android))\.js/)) { e = o.replace(/\/cordova\.((ios)|(android))\.js/, "") + "/"; break } } return e }(); null === t && (console.log("Could not find cordova.js script tag. Plugin loading may fail."), t = ""), c("cordova/plugin_list", t + "cordova_plugins.js", function () { var e = o("cordova/plugin_list"); a(t, e, n) }, n) } }), v("cordova/pluginloader_b", function (n, e, t) { var a = n("cordova/modulemapper"); e.load = function (e) { !function (e) { if (e && e.length) for (var n, t = 0; n = e[t]; t++) { if (n.clobbers && n.clobbers.length) for (var o = 0; o < n.clobbers.length; o++)a.clobbers(n.id, n.clobbers[o]); if (n.merges && n.merges.length) for (var r = 0; r < n.merges.length; r++)a.merges(n.id, n.merges[r]); n.runs && a.runs(n.id) } }(n("cordova/plugin_list")), e() } }), v("cordova/urlutil", function (e, n, t) { n.makeAbsolute = function (e) { var n = document.createElement("a"); return n.href = e, n.href } }), v("cordova/utils", function (e, n, t) { var o, r = n; function a(e) { for (var n = "", t = 0; t < e; t++) { var o = parseInt(256 * Math.random(), 10).toString(16); 1 == o.length && (o = "0" + o), n += o } return n } r.defineGetterSetter = function (e, n, t, o) { if (Object.defineProperty) { var r = { get: t, configurable: !0 }; o && (r.set = o), Object.defineProperty(e, n, r) } else e.__defineGetter__(n, t), o && e.__defineSetter__(n, o) }, r.defineGetter = r.defineGetterSetter, r.arrayIndexOf = function (e, n) { if (e.indexOf) return e.indexOf(n); for (var t = e.length, o = 0; o < t; ++o)if (e[o] == n) return o; return -1 }, r.arrayRemove = function (e, n) { var t = r.arrayIndexOf(e, n); return -1 != t && e.splice(t, 1), -1 != t }, r.typeName = function (e) { return Object.prototype.toString.call(e).slice(8, -1) }, r.isArray = Array.isArray || function (e) { return "Array" == r.typeName(e) }, r.isDate = function (e) { return e instanceof Date }, r.clone = function (e) { if (!e || "function" == typeof e || r.isDate(e) || "object" != typeof e) return e; var n, t; if (r.isArray(e)) { for (n = [], t = 0; t < e.length; ++t)n.push(r.clone(e[t])); return n } for (t in n = {}, e) t in n && n[t] == e[t] || (n[t] = r.clone(e[t])); return n }, r.close = function (n, t, o) { return function () { var e = o || arguments; return t.apply(n, e) } }, r.createUUID = function () { return a(4) + "-" + a(2) + "-" + a(2) + "-" + a(2) + "-" + a(6) }, r.extend = (o = function () { }, function (e, n) { o.prototype = n.prototype, e.prototype = new o, e.__super__ = n.prototype, e.prototype.constructor = e }), r.alert = function (e) { window.alert ? window.alert(e) : console && console.log && console.log(e) } }), window.cordova = o("cordova"), o("cordova/init") }();